A test for 2-matrix_divided module
>>> matrix_divided = __import__('2-matrix_divided').matrix_divided
>>> matrix_divided([[6, 3, 9], [12, 15, 21]], 3)
[[2.0, 1.0, 3.0], [4.0, 5.0, 7.0]]

A test for 2-matrix_divided module
>>> matrix_divided = __import__('2-matrix_divided').matrix_divided
>>> matrix_divided([[6, 3, 9], [12, 15, 21]], -3)
[[-2.0, -1.0, -3.0], [-4.0, -5.0, -7.0]]

A test for 2-matrix_divided module
>>> matrix_divided = __import__('2-matrix_divided').matrix_divided
>>> matrix_divided([[6, 3, 9.66], [12, 15, 21]], 3)
[[2.0, 1.0, 3.22], [4.0, 5.0, 7.0]]

>>> matrix_divided([[6, 3, 9], [12, 15, 21]], 0)
Traceback (most recent call last):
  ...
ZeroDivisionError: division by zero

>>> matrix_divided([[6, 3, 9], [12, 15, 21]], 'doc')
Traceback (most recent call last):
  ...
TypeError: div must be a number

>>> matrix_divided([[6, '3', 9], [12, 15, 21]], 3)
Traceback (most recent call last):
  ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided([[6, 3, 9], [12, 15, 'hen']], 3)
Traceback (most recent call last):
  ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided([(6, 3, 9), [12, 15, 'hen']], 3)
Traceback (most recent call last):
  ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided(([6, 3, 9], [12, 15, 'hen']), 3)
Traceback (most recent call last):
  ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided([[6, 3, 9], [12, 15]], 0)
Traceback (most recent call last):
  ...
TypeError: Each row of the matrix must have the same size
