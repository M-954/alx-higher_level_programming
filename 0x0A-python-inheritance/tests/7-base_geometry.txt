#A test case for 7-base_geometry module
>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry
>>> bg = BaseGeometry()

>>> bg.integer_validator('width', 12)


>>> bg.integer_validator('distance', -4)
Traceback (most recent call last):
        ...
ValueError: distance must be greater than 0

>>> bg.integer_validator('circle', 6.7)
Traceback (most recent call last):
        ...
TypeError: circle must be an integer

>>> bg.integer_validator('age', 0)
Traceback (most recent call last):
        ...
ValueError: age must be greater than 0

>>> bg.area()
Traceback (most recent call last):
        ...
Exception: area() is not implemented

>>> bg.integer_validator()
Traceback (most recent call last):
	...
TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'

>>> bg.integer_validator('mile', None)
Traceback (most recent call last):
        ...
TypeError: mile must be an integer

>>> bg.integer_validator('mile', True)
Traceback (most recent call last):
        ...
TypeError: mile must be an integer

>>> bg.integer_validator('mile', [6,])
Traceback (most recent call last):
        ...
TypeError: mile must be an integer

>>> bg.integer_validator('mile', (6,))
Traceback (most recent call last):
        ...
TypeError: mile must be an integer

>>> bg.integer_validator('mile', '6')
Traceback (most recent call last):
        ...
TypeError: mile must be an integer

>>> bg.integer_validator('age')
Traceback (most recent call last):
        ...
TypeError: integer_validator() missing 1 required positional argument: 'value'

>>> bg.integer_validator('mile', {9,7})
Traceback (most recent call last):
        ...
TypeError: mile must be an integer
